/**
 * –ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –¥–ª—è —Å–∞–π—Ç—É —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ –¢–µ–∑–µ
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –æ—Å–Ω–æ–≤–Ω—É –ª–æ–≥—ñ–∫—É –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É, —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–æ–¥—ñ—è–º–∏ —Ç–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
 */

class TaizeCommunityApp {
  constructor() {
    this.events = [];
    this.currentSection = 'map';
    this.isInitialized = false;
    this.VERSION = '1.0.0';

    // –ü—Ä–∏–≤'—è–∑–∫–∞ –º–µ—Ç–æ–¥—ñ–≤ –¥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    this.showEventDetails = this.showEventDetails.bind(this);
    this.deleteEvent = this.deleteEvent.bind(this);
    this.openImageModal = this.openImageModal.bind(this);

    this.init();
  }

  /**
   * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
   */
  async init() {
    try {
      console.log('–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Taize Community App v' + this.VERSION);

      // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
      const isFirstVisit = !localStorage.getItem('taizeEvents');
      if (isFirstVisit) {
        this.showLoadingIndicator();
      }

      await this.loadEvents();
      
      // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä
      this.hideLoadingIndicator();

      await this.loadEvents();
      this.setupEventListeners();
      this.setupModals();
      this.showSection('map');

      // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∞–π–¥–±–∞—Ä–∞
      this.updateSidebar();

      this.isInitialized = true;
      console.log('–ó–∞—Å—Ç–æ—Å—É–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π');

      // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –¥–ª—è —ñ–Ω—à–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
      window.dispatchEvent(new CustomEvent('appInitialized', { detail: this }));

    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error);
      this.showError('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É');
    }
  }

    /**
   * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π –∑ localStorage –∞–±–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏
   */
  async loadEvents() {
    try {
      const savedEvents = localStorage.getItem('taizeEvents');

      if (savedEvents) {
        this.events = JSON.parse(savedEvents);
        console.log(`–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${this.events.length} –ø–æ–¥—ñ–π –∑ localStorage`);
      } else {
        // –°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ Google Sheets
        console.log('üîÑ –ü–µ—Ä—à–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è - —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ Google Sheets...');
        await this.loadFromSheetsFirst();
        
        // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏
        if (this.events.length === 0) {
          this.events = this.getDefaultEvents();
          console.log('–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏ –ø–æ–¥—ñ–π');
        }
        
        await this.saveEvents();
      }

      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–∞ –æ—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
      this.validateEvents();

    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π:', error);
      this.events = this.getDefaultEvents();
      this.showError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –ø—Ä–∏–∫–ª–∞–¥–∏.');
    }
  }

  /**
   * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –ø–æ–¥—ñ–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
   */
  getDefaultEvents() {
    return [
      {
        id: Date.now(),
        title: "–ú–æ–ª–∏—Ç–æ–≤–Ω–∞ –∑—É—Å—Ç—Ä—ñ—á —É –Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫—É",
        date: "2025-01-15T19:00",
        location: "–¶–µ—Ä–∫–≤–∞ –°–≤—è—Ç–æ–≥–æ –ú–∏–∫–æ–ª–∞—è",
        lat: 48.9226,
        lng: 24.7111,
        description: "–°–ø—ñ–ª—å–Ω–∞ –º–æ–ª–∏—Ç–≤–∞ –≤ –¥—É—Å—ñ –¢–µ–∑–µ –∑ –ø—ñ—Å–Ω—è–º–∏ —Ç–∞ –º–µ–¥–∏—Ç–∞—Ü—ñ—î—é",
        fullDescription: "–ó–∞–ø—Ä–æ—à—É—î–º–æ –≤—Å—ñ—Ö –±–∞–∂–∞—é—á–∏—Ö –Ω–∞ –º–æ–ª–∏—Ç–æ–≤–Ω—É –∑—É—Å—Ç—Ä—ñ—á —É –¥—É—Å—ñ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ –¢–µ–∑–µ. –í–µ—á—ñ—Ä –ø–æ—á–Ω–µ—Ç—å—Å—è –æ 19:00 —Å–ø—ñ–ª—å–Ω–∏–º–∏ –ø—ñ—Å–Ω—è–º–∏, –ø—ñ—Å–ª—è —á–æ–≥–æ –±—É–¥–µ —á–∞—Å —Ç–∏—Ö–æ—ó –º–µ–¥–∏—Ç–∞—Ü—ñ—ó —Ç–∞ —á–∏—Ç–∞–Ω–Ω—è –°–≤—è—â–µ–Ω–Ω–æ–≥–æ –ü–∏—Å–∞–Ω–Ω—è. –ó–∞–≤–µ—Ä—à–∏–º–æ –∑—É—Å—Ç—Ä—ñ—á —Å–ø—ñ–ª—å–Ω–æ—é –º–æ–ª–∏—Ç–≤–æ—é. –ü—Ä–∏–Ω–µ—Å—ñ—Ç—å —ñ–∑ —Å–æ–±–æ—é –≤—ñ–¥–∫—Ä–∏—Ç–µ —Å–µ—Ä—Ü–µ —Ç–∞ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –¥–æ –∑—É—Å—Ç—Ä—ñ—á—ñ –∑ –ë–æ–≥–æ–º —É —Ç–∏—à—ñ —Ç–∞ —Å–ø—ñ–ª—å–Ω–æ—Ç—ñ.",
        photos: [
          "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=300&fit=crop",
          "https://images.unsplash.com/photo-1516450360452-9312f5e86fc7?w=400&h=300&fit=crop"
        ],
        programLink: "https://taize.fr/uk"
      },
      {
        id: Date.now() + 1,
        title: "–ó—É—Å—Ç—Ä—ñ—á —É –õ—å–≤–æ–≤—ñ",
        date: "2025-01-22T18:30",
        location: "–ö–æ—Å—Ç–µ–ª –°–≤—è—Ç–æ–≥–æ –ê–Ω—Ç–æ–Ω—ñ—è",
        lat: 49.8397,
        lng: 24.0297,
        description: "–í–µ—á—ñ—Ä–Ω—è –º–æ–ª–∏—Ç–≤–∞ –∑ —á–∏—Ç–∞–Ω–Ω—è–º —Ç–∞ –ø—ñ—Å–Ω—è–º–∏",
        fullDescription: "–í–µ—á—ñ—Ä–Ω—è –º–æ–ª–∏—Ç–≤–∞ —É –õ—å–≤–æ–≤—ñ –ø—Ä–æ—Ö–æ–¥–∏—Ç–∏–º–µ —É –∫–æ—Å—Ç–µ–ª—ñ –°–≤—è—Ç–æ–≥–æ –ê–Ω—Ç–æ–Ω—ñ—è. –ü—Ä–æ–≥—Ä–∞–º–∞ –≤–∫–ª—é—á–∞—î —Å–ø—ñ–ª—å–Ω—ñ –ø—ñ—Å–Ω—ñ –≤ –¥—É—Å—ñ –¢–µ–∑–µ, —á–∏—Ç–∞–Ω–Ω—è —É—Ä–∏–≤–∫—ñ–≤ –∑ –Ñ–≤–∞–Ω–≥–µ–ª—ñ—è —Ç–∞ —á–∞—Å –¥–ª—è –æ—Å–æ–±–∏—Å—Ç–æ—ó –º–æ–ª–∏—Ç–≤–∏ –≤ —Ç–∏—à—ñ. –ü—ñ—Å–ª—è –º–æ–ª–∏—Ç–≤–∏ –±—É–¥–µ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è –∑ —ñ–Ω—à–∏–º–∏ —É—á–∞—Å–Ω–∏–∫–∞–º–∏ –∑–∞ —á–∞—à–∫–æ—é —á–∞—é.",
        photos: [
          "https://images.unsplash.com/photo-1519491050282-cf00c82424b4?w=400&h=300&fit=crop"
        ],
        programLink: ""
      },
      {
        id: Date.now() + 2,
        title: "–ú–æ–ª–æ–¥—ñ–∂–Ω–∞ –∑—É—Å—Ç—Ä—ñ—á —É –¢–µ—Ä–Ω–æ–ø–æ–ª—ñ",
        date: "2025-02-05T17:00",
        location: "–ü–∞—Ä–∞—Ñ—ñ—è–ª—å–Ω–∏–π –¥—ñ–º",
        lat: 49.5535,
        lng: 25.5948,
        description: "–°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –∑—É—Å—Ç—Ä—ñ—á –¥–ª—è –º–æ–ª–æ–¥—ñ –∑ –ø—ñ—Å–Ω—è–º–∏ —Ç–∞ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è–º",
        fullDescription: "–ú–æ–ª–æ–¥—ñ–∂–Ω–∞ –∑—É—Å—Ç—Ä—ñ—á —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ –¢–µ–∑–µ –≤ –¢–µ—Ä–Ω–æ–ø–æ–ª—ñ. –†–∞–∑–æ–º –º–∏ –±—É–¥–µ–º–æ —Å–ø—ñ–≤–∞—Ç–∏ –ø—ñ—Å–Ω—ñ, –¥—ñ–ª–∏—Ç–∏—Å—è –¥—É–º–∫–∞–º–∏ –ø—Ä–æ –≤—ñ—Ä—É —Ç–∞ —Å—É—á–∞—Å–Ω–µ –∂–∏—Ç—Ç—è, –∞ —Ç–∞–∫–æ–∂ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ —á–∞—Å —É –º–æ–ª–∏—Ç–≤—ñ. –ó—É—Å—Ç—Ä—ñ—á –æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–∞ –Ω–∞ –º–æ–ª–æ–¥—å –≤—ñ–∫–æ–º –≤—ñ–¥ 16 –¥–æ 35 —Ä–æ–∫—ñ–≤, –∞–ª–µ –≤—Å—ñ –±–∞–∂–∞—é—á—ñ –∑–∞–ø—Ä–æ—à—É—é—Ç—å—Å—è.",
        photos: [
          "https://images.unsplash.com/photo-1511632765486-a01980e01a18?w=400&h=300&fit=crop"
        ],
        programLink: ""
      }
    ];
  }

    /**
   * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ Google Sheets –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—ñ
   */
  async loadFromSheetsFirst() {
    try {
      if (window.sheetsDB) {
        const sheetsEvents = await window.sheetsDB.loadEvents();
        if (sheetsEvents && sheetsEvents.length > 0) {
          this.events = sheetsEvents;
          console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${sheetsEvents.length} –ø–æ–¥—ñ–π –∑ Google Sheets`);
          
          // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
          this.showWelcomeMessage();
          return;
        }
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ Sheets:', error);
    }
    
    console.log('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ Google Sheets');
  }

  /**
   * –í—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
   */
  showWelcomeMessage() {
    setTimeout(() => {
      const message = `
  üïäÔ∏è –í—ñ—Ç–∞—î–º–æ —É —Å–ø—ñ–ª—å–Ω–æ—Ç—ñ –¢–µ–∑–µ!

  –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ Google Sheets.
  –ù–∞ –∫–∞—Ä—Ç—ñ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω—ñ –Ω–∞—à—ñ –º–æ–ª–∏—Ç–æ–≤–Ω—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ.

  –ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ –Ω–∞—Å! üôè
      `;
      
      if (confirm(message.trim())) {
        // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ—Ö—ñ–¥ –¥–æ –º–∞–π–±—É—Ç–Ω—ñ—Ö –ø–æ–¥—ñ–π
        this.showSection('future');
      }
    }, 1000);
  }

  /**
   * –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–æ–¥—ñ–π
   */
  validateEvents() {
    const validEvents = this.events.filter(event => {
      return event.id && event.title && event.date &&
        event.location && event.lat && event.lng;
    });

    if (validEvents.length !== this.events.length) {
      console.warn(`–í–∏–¥–∞–ª–µ–Ω–æ ${this.events.length - validEvents.length} –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏—Ö –ø–æ–¥—ñ–π`);
      this.events = validEvents;
    }
  }

  /**
   * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π –≤ localStorage
   */
  async saveEvents() {
    try {
      const dataToSave = {
        events: this.events,
        version: this.VERSION,
        lastUpdated: new Date().toISOString()
      };

      localStorage.setItem('taizeEvents', JSON.stringify(this.events));
      localStorage.setItem('taizeMetadata', JSON.stringify(dataToSave));

      console.log('–ü–æ–¥—ñ—ó –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');

    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è:', error);
      this.showError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ');
    }
  }

  /**
   * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
   */
  setupEventListeners() {
    // –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–¥—ñ—ó
    const eventForm = document.getElementById('event-form');
    if (eventForm) {
      eventForm.addEventListener('submit', this.handleEventSubmit.bind(this));
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    document.addEventListener('keydown', this.handleKeyDown.bind(this));

    // –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ —Ä–æ–∑–º—ñ—Ä—É –≤—ñ–∫–Ω–∞
    window.addEventListener('resize', this.handleResize.bind(this));
  }

  /**
   * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
   */
  setupModals() {
    const eventModal = document.getElementById('event-modal');
    const imageModal = document.getElementById('image-modal');

    if (eventModal) {
      const closeBtn = eventModal.querySelector('.close');
      if (closeBtn) {
        closeBtn.addEventListener('click', () => this.closeModal('event-modal'));
      }
    }

    if (imageModal) {
      const closeBtn = imageModal.querySelector('.close');
      if (closeBtn) {
        closeBtn.addEventListener('click', () => this.closeModal('image-modal'));
      }
    }

    // –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—ñ–≤ –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–∏–º–∏
    window.addEventListener('click', (event) => {
      if (event.target.classList.contains('modal')) {
        this.closeModal(event.target.id);
      }
    });
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ –ø–æ–¥–∞—á—ñ —Ñ–æ—Ä–º–∏
   */
  async handleEventSubmit(event) {
    event.preventDefault();

    try {
      const formData = this.getFormData();

      if (!this.validateFormData(formData)) {
        return;
      }

      const newEvent = this.createEventFromForm(formData);

      this.events.push(newEvent);
      await this.saveEvents();

      // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
      this.refreshUI();

      // –û—á–∏—â–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏
      this.clearForm();

      this.showSuccess('–ü–æ–¥—ñ—é —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!');

    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–¥—ñ—ó:', error);
      this.showError('–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –ø–æ–¥—ñ—é');
    }
  }

  /**
   * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —Ñ–æ—Ä–º–∏
   */
  getFormData() {
    return {
      title: this.getElementValue('event-title'),
      date: this.getElementValue('event-date'),
      location: this.getElementValue('event-location'),
      lat: this.getElementValue('event-lat'),
      lng: this.getElementValue('event-lng'),
      description: this.getElementValue('event-description'),
      fullDescription: this.getElementValue('event-full-description'),
      programLink: this.getElementValue('event-program-link'),
      photos: this.getElementValue('event-photos')
    };
  }

  /**
   * –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞
   */
  getElementValue(id) {
    const element = document.getElementById(id);
    return element ? element.value.trim() : '';
  }

  /**
   * –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∏
   */
  validateFormData(data) {
    const errors = [];

    if (!data.title) errors.push('–ù–∞–∑–≤–∞ –ø–æ–¥—ñ—ó –æ–±–æ–≤\'—è–∑–∫–æ–≤–∞');
    if (!data.date) errors.push('–î–∞—Ç–∞ —Ç–∞ —á–∞—Å –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ');
    if (!data.location) errors.push('–ú—ñ—Å—Ü–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –æ–±–æ–≤\'—è–∑–∫–æ–≤–µ');
    if (!data.lat || isNaN(parseFloat(data.lat))) errors.push('–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ —à–∏—Ä–æ—Ç–∞');
    if (!data.lng || isNaN(parseFloat(data.lng))) errors.push('–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –¥–æ–≤–≥–æ—Ç–∞');
    if (!data.description) errors.push('–û–ø–∏—Å –ø–æ–¥—ñ—ó –æ–±–æ–≤\'—è–∑–∫–æ–≤–∏–π');

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –£–∫—Ä–∞—ó–Ω–∏
    const lat = parseFloat(data.lat);
    const lng = parseFloat(data.lng);

    if (lat < 44 || lat > 52) errors.push('–®–∏—Ä–æ—Ç–∞ –º–∞—î –±—É—Ç–∏ –º—ñ–∂ 44 —Ç–∞ 52 (—Ç–µ—Ä–∏—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏)');
    if (lng < 22 || lng > 40) errors.push('–î–æ–≤–≥–æ—Ç–∞ –º–∞—î –±—É—Ç–∏ –º—ñ–∂ 22 —Ç–∞ 40 (—Ç–µ—Ä–∏—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏)');

    if (errors.length > 0) {
      this.showError('–ü–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:\n' + errors.join('\n'));
      return false;
    }

    return true;
  }

  /**
   * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –ø–æ–¥—ñ—ó –∑ –¥–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∏
   */
  createEventFromForm(data) {
    return {
      id: Date.now(),
      title: data.title,
      date: data.date,
      location: data.location,
      lat: parseFloat(data.lat),
      lng: parseFloat(data.lng),
      description: data.description,
      fullDescription: data.fullDescription || data.description,
      programLink: data.programLink,
      photos: this.parsePhotos(data.photos),
      createdAt: new Date().toISOString()
    };
  }

  /**
   * –ü–∞—Ä—Å–∏–Ω–≥ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
   */
  parsePhotos(photosString) {
    if (!photosString) return [];

    return photosString
      .split(',')
      .map(url => url.trim())
      .filter(url => url && this.isValidUrl(url));
  }

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ URL
   */
  isValidUrl(string) {
    try {
      new URL(string);
      return true;
    } catch (_) {
      return false;
    }
  }

  /**
   * –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å–µ–∫—Ü—ñ–π
   */
  showSection(section) {
    try {
      // –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –≤—Å—ñ —Å–µ–∫—Ü—ñ—ó
      const sections = ['map-container', 'admin-panel', 'future-events', 'media-mentions'];
      sections.forEach(sectionClass => {
        const elements = document.querySelectorAll(`.${sectionClass}`);
        elements.forEach(el => {
          el.style.display = 'none';
          el.classList.remove('active');
        });
      });

      // –í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –∑ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó (—Ç—ñ–ª—å–∫–∏ –∑ —Ç–∏—Ö, —â–æ —ñ—Å–Ω—É—é—Ç—å)
      document.querySelectorAll('nav button').forEach(btn => {
        btn.classList.remove('active');
      });

      // –ü–æ–∫–∞–∑–∞—Ç–∏ –æ–±—Ä–∞–Ω—É —Å–µ–∫—Ü—ñ—é
      this.currentSection = section;

      switch (section) {
        case 'map':
          this.showMapSection();
          break;
        case 'admin':
          this.showAdminSection();
          break;
        case 'future':
          this.showFutureSection();
          break;
        case 'media':
          this.showMediaSection();
          break;
        default:
          console.warn('–ù–µ–≤—ñ–¥–æ–º–∞ —Å–µ–∫—Ü—ñ—è:', section);
      }

    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó:', error);
    }
  }

  /**
   * –ü–æ–∫–∞–∑ —Å–µ–∫—Ü—ñ—ó –∫–∞—Ä—Ç–∏
   */
  showMapSection() {
    const mapSection = document.getElementById('map-section');
    const mapBtn = document.getElementById('map-btn');

    if (mapSection) mapSection.style.display = 'block';
    if (mapBtn) mapBtn.classList.add('active');

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏ –ø—ñ—Å–ª—è –ø–æ–∫–∞–∑—É
    setTimeout(() => {
      if (window.mapInstance) {
        window.mapInstance.invalidateSize();
        window.mapInstance.displayEventsOnMap();
      }
    }, 100);
  }

  /**
   * –ü–æ–∫–∞–∑ –∞–¥–º—ñ–Ω —Å–µ–∫—Ü—ñ—ó
   */
  showAdminSection() {
    const adminSection = document.getElementById('admin-section');

    if (adminSection) {
      adminSection.style.display = 'block';
      adminSection.classList.add('active');
    }

    // –ù–µ –æ–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó, –æ—Å–∫—ñ–ª—å–∫–∏ —ó—ó –Ω–µ–º–∞—î
    this.updateAdminEventsList();
  }

  /**
   * –ü–æ–∫–∞–∑ —Å–µ–∫—Ü—ñ—ó –º–∞–π–±—É—Ç–Ω—ñ—Ö –ø–æ–¥—ñ–π
   */
  showFutureSection() {
    const futureSection = document.getElementById('future-section');
    const futureBtn = document.getElementById('future-btn');

    if (futureSection) futureSection.classList.add('active');
    if (futureBtn) futureBtn.classList.add('active');

    this.updateFutureEventsList();
  }

  /**
   * –ü–æ–∫–∞–∑ —Å–µ–∫—Ü—ñ—ó –ó–ú–Ü
   */
  showMediaSection() {
    const mediaSection = document.getElementById('media-section');
    const mediaBtn = document.getElementById('media-btn');

    if (mediaSection) mediaSection.classList.add('active');
    if (mediaBtn) mediaBtn.classList.add('active');

    this.updateMediaList();
  }

  /**
   * –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –ø–æ–¥—ñ—ó
   */
  showEventDetails(eventId, customEvent = null) {
    const event = customEvent || this.events.find(e => e.id === eventId);
    if (!event) {
      console.warn('–ü–æ–¥—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ:', eventId);
      return;
    }

    const modalContent = document.getElementById('modal-content');
    if (!modalContent) return;

    modalContent.innerHTML = this.generateEventDetailsHTML(event);

    const modal = document.getElementById('event-modal');
    if (modal) {
      modal.style.display = 'block';
    }
  }

    /**
   * –ü–æ–∫–∞–∑ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
   */
  showLoadingIndicator() {
    const indicator = document.getElementById('loading-indicator');
    if (indicator) {
      indicator.style.display = 'block';
    }
  }

  /**
   * –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
   */
  hideLoadingIndicator() {
    const indicator = document.getElementById('loading-indicator');
    if (indicator) {
      indicator.style.display = 'none';
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –ø–æ–¥—ñ—ó
   */
  generateEventDetailsHTML(event) {
    return `
            <h2>${this.escapeHtml(event.title)}</h2>
            <div style="margin: 20px 0; padding: 15px; background: #f8f9fa; border-radius: 8px;">
                <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${this.formatDate(event.date)}</p>
                <p><strong>üìç –ú—ñ—Å—Ü–µ:</strong> ${this.escapeHtml(event.location)}</p>
                <p><strong>üìã –û–ø–∏—Å:</strong></p>
                <p style="line-height: 1.6; margin-top: 10px;">${this.escapeHtml(event.fullDescription || event.description)}</p>
            </div>
            ${this.generatePhotosHTML(event.photos)}
            ${this.generateProgramLinkHTML(event.programLink)}
        `;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π
   */
  generatePhotosHTML(photos) {
    if (!photos || photos.length === 0) return '';

    return `
            <div class="photo-gallery">
                ${photos.map(photo =>
      `<img src="${this.escapeHtml(photo)}" 
                          alt="–§–æ—Ç–æ –ø–æ–¥—ñ—ó" 
                          onclick="app.openImageModal('${this.escapeHtml(photo)}')" 
                          onerror="this.style.display='none'" 
                          loading="lazy">`
    ).join('')}
            </div>
        `;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º—É
   */
  generateProgramLinkHTML(programLink) {
    if (!programLink) return '';

    return `
            <p style="margin-top: 20px;">
                <a href="${this.escapeHtml(programLink)}" target="_blank" class="btn btn-primary">
                    üìñ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É –º–æ–ª–∏—Ç–≤–∏
                </a>
            </p>
        `;
  }

  /**
   * –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–¥—ñ—ó
   */
  async deleteEvent(eventId) {
    if (!confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –ø–æ–¥—ñ—é?')) {
      return;
    }

    try {
      this.events = this.events.filter(event => event.id !== eventId);
      await this.saveEvents();
      this.refreshUI();
      this.showSuccess('–ü–æ–¥—ñ—é –≤–∏–¥–∞–ª–µ–Ω–æ');

    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–¥—ñ—ó:', error);
      this.showError('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥—ñ—é');
    }
  }

  /**
   * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
   */
  openImageModal(imageSrc) {
    const modal = document.getElementById('image-modal');
    const modalImage = document.getElementById('modal-image');

    if (modal && modalImage) {
      modalImage.src = imageSrc;
      modal.style.display = 'block';
    }
  }

  /**
   * –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
   */
  closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
      modal.style.display = 'none';
    }
  }

  /**
   * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏
   */
  formatDate(dateString) {
    try {
      const date = new Date(dateString);
      const options = {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        weekday: 'long'
      };
      return date.toLocaleString('uk-UA', options);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏:', error);
      return dateString;
    }
  }

  /**
   * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø–æ–¥—ñ–π –≤ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ
   */
  updateAdminEventsList() {
    const list = document.getElementById('admin-events-list');
    if (!list) return;

    if (this.events.length === 0) {
      list.innerHTML = '<p style="color: #7f8c8d; font-style: italic;">–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –¥–æ–¥–∞–Ω–∏—Ö –ø–æ–¥—ñ–π.</p>';
      return;
    }

    const sortedEvents = [...this.events].sort((a, b) => new Date(b.date) - new Date(a.date));

    list.innerHTML = sortedEvents.map(event => this.generateEventItemHTML(event)).join('');
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç–∞ –ø–æ–¥—ñ—ó –≤ —Å–ø–∏—Å–∫—É
   */
  generateEventItemHTML(event) {
    return `
            <div class="event-item">
                <h4>${this.escapeHtml(event.title)}</h4>
                <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${this.formatDate(event.date)}</p>
                <p><strong>üìç –ú—ñ—Å—Ü–µ:</strong> ${this.escapeHtml(event.location)}</p>
                <p><strong>üìã –û–ø–∏—Å:</strong> ${this.escapeHtml(event.description)}</p>
                ${event.photos && event.photos.length > 0 ?
        `<p><strong>üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π:</strong> ${event.photos.length}</p>` : ''
      }
                <div style="margin-top: 15px;">
                    <button onclick="app.showEventDetails(${event.id})" class="btn btn-primary">
                        üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                    </button>
                    <button onclick="app.deleteEvent(${event.id})" class="btn btn-danger">
                        üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
                    </button>
                </div>
            </div>
        `;
  }

  /**
   * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –º–∞–π–±—É—Ç–Ω—ñ—Ö –ø–æ–¥—ñ–π
   */
  updateFutureEventsList() {
    const list = document.getElementById('future-events-list');
    if (!list) return;

    const now = new Date();
    const futureEvents = this.events.filter(event => new Date(event.date) > now);

    if (futureEvents.length === 0) {
      list.innerHTML = '<p style="color: #7f8c8d; font-style: italic;">–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö –º–∞–π–±—É—Ç–Ω—ñ—Ö –ø–æ–¥—ñ–π.</p>';
      return;
    }

    const sortedEvents = futureEvents.sort((a, b) => new Date(a.date) - new Date(b.date));

    list.innerHTML = sortedEvents.map(event => `
            <div class="event-item">
                <h4>${this.escapeHtml(event.title)}</h4>
                <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${this.formatDate(event.date)}</p>
                <p><strong>üìç –ú—ñ—Å—Ü–µ:</strong> ${this.escapeHtml(event.location)}</p>
                <p>${this.escapeHtml(event.description)}</p>
                <button onclick="app.showEventDetails(${event.id})" class="btn btn-primary">
                    –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ
                </button>
            </div>
        `).join('');
  }

  /**
   * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–≥–∞–¥–æ–∫ –≤ –ó–ú–Ü
   */
  updateMediaList() {
    const list = document.getElementById('media-list');
    if (!list) return;

    list.innerHTML = `
            <div class="event-item">
                <h4>üì∫ –Ü–Ω—Ç–µ—Ä–≤'—é –Ω–∞ –º—ñ—Å—Ü–µ–≤–æ–º—É —Ç–µ–ª–µ–±–∞—á–µ–Ω–Ω—ñ</h4>
                <p><strong>üìÖ –î–∞—Ç–∞:</strong> 15 –ª–∏—Å—Ç–æ–ø–∞–¥–∞ 2024</p>
                <p><strong>üì∫ –ö–∞–Ω–∞–ª:</strong> –ì–∞–ª–∏—á–∏–Ω–∞ –¢–í</p>
                <p>–†–æ–∑–ø–æ–≤—ñ–¥—å –ø—Ä–æ –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ –¢–µ–∑–µ –≤ –Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫—É —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –º–æ–ª–∏—Ç–æ–≤–Ω–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–µ–π –¥–ª—è –º—ñ—Å—Ü–µ–≤–æ—ó –≥—Ä–æ–º–∞–¥–∏.</p>
            </div>
            <div class="event-item">
                <h4>üì∞ –°—Ç–∞—Ç—Ç—è –≤ –≥–∞–∑–µ—Ç—ñ "–ì–∞–ª–∏—á–∏–Ω–∞"</h4>
                <p><strong>üìÖ –î–∞—Ç–∞:</strong> 3 –ª–∏—Å—Ç–æ–ø–∞–¥–∞ 2024</p>
                <p>–ü—É–±–ª—ñ–∫–∞—Ü—ñ—è –ø—Ä–æ –µ–∫—É–º–µ–Ω—ñ—á–Ω–∏–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –º–æ–ª–∏—Ç–æ–≤–Ω–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–µ–π —Ç–∞ —ó—Ö –≤–ø–ª–∏–≤ –Ω–∞ –º—ñ–∂–∫–æ–Ω—Ñ–µ—Å—ñ–π–Ω–∏–π –¥—ñ–∞–ª–æ–≥.</p>
            </div>
        `;
  }

  /**
   * –û—á–∏—â–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏
   */
  clearForm() {
    const form = document.getElementById('event-form');
    if (form) {
      form.reset();
    }

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö –º–∞—Ä–∫–µ—Ä—ñ–≤ –∑ –∫–∞—Ä—Ç–∏
    if (window.mapInstance && window.mapInstance.removeTempMarker) {
      window.mapInstance.removeTempMarker();
    }
  }

  /**
   * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
   */
  refreshUI() {
    if (window.mapInstance && window.mapInstance.displayEventsOnMap) {
      window.mapInstance.displayEventsOnMap();
    }

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∞–π–¥–±–∞—Ä–∞
    this.updateSidebar();

    if (this.currentSection === 'admin') {
      this.updateAdminEventsList();
    } else if (this.currentSection === 'future') {
      this.updateFutureEventsList();
    }
  }

  /**
   * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∞–π–¥–±–∞—Ä–∞ –∑ –Ω–µ–¥–∞–≤–Ω—ñ–º–∏ –ø–æ–¥—ñ—è–º–∏
   */
  updateSidebar() {
    this.updateRecentEvents();
    this.updateStatistics();
  }

  /**
   * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–¥–∞–≤–Ω—ñ—Ö –ø–æ–¥—ñ–π –≤ —Å–∞–π–¥–±–∞—Ä—ñ
   */
  updateRecentEvents() {
    const container = document.getElementById('recent-events-list');
    if (!container) return;

    const now = new Date();
    const recentEvents = this.events
      .filter(event => new Date(event.date) < now) // –¢—ñ–ª—å–∫–∏ –º–∏–Ω—É–ª—ñ –ø–æ–¥—ñ—ó
      .sort((a, b) => new Date(b.date) - new Date(a.date)) // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –¥–∞—Ç–æ—é (–Ω–æ–≤—ñ—à—ñ —Å–ø–æ—á–∞—Ç–∫—É)
      .slice(0, 6); // –ë–µ—Ä–µ–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ 6 –ø–æ–¥—ñ–π

    if (recentEvents.length === 0) {
      container.innerHTML = `
                <div class="recent-event-item">
                    <div class="recent-event-title">–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –ø–æ–¥—ñ–π</div>
                    <div class="recent-event-location">–î–æ–¥–∞–π—Ç–µ –ø–µ—Ä—à—É –ø–æ–¥—ñ—é —á–µ—Ä–µ–∑ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å</div>
                </div>
            `;
      return;
    }

    container.innerHTML = recentEvents.map(event => `
            <div class="recent-event-item" onclick="app.showEventDetails(${event.id})">
                <div class="recent-event-date">${this.formatDateShort(event.date)}</div>
                <div class="recent-event-title">${this.escapeHtml(event.title)}</div>
                <div class="recent-event-location">${this.escapeHtml(event.location)}</div>
            </div>
        `).join('');
  }

  /**
   * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Å–∞–π–¥–±–∞—Ä—ñ
   */
  updateStatistics() {
    const container = document.getElementById('stats-container');
    if (!container) return;

    const stats = this.getStatistics();

    container.innerHTML = `
            <div class="stat-item">
                <span class="stat-label">–í—Å—å–æ–≥–æ –ø–æ–¥—ñ–π</span>
                <span class="stat-value">${stats.total}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">–ü—Ä–æ–≤–µ–¥–µ–Ω–æ</span>
                <span class="stat-value">${stats.past}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ</span>
                <span class="stat-value">${stats.future}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">–ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è–º–∏</span>
                <span class="stat-value">${stats.withPhotos}</span>
            </div>
            ${stats.withPrograms > 0 ? `
            <div class="stat-item">
                <span class="stat-label">–ó –ø—Ä–æ–≥—Ä–∞–º–∞–º–∏</span>
                <span class="stat-value">${stats.withPrograms}</span>
            </div>
            ` : ''}
        `;
  }

  /**
   * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏ –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ (–∫–æ—Ä–æ—Ç–∫–∞ –≤–µ—Ä—Å—ñ—è)
   */
  formatDateShort(dateString) {
    try {
      const date = new Date(dateString);
      const now = new Date();
      const diffInDays = Math.floor((now - date) / (1000 * 60 * 60 * 24));

      if (diffInDays === 0) {
        return '–°—å–æ–≥–æ–¥–Ω—ñ';
      } else if (diffInDays === 1) {
        return '–í—á–æ—Ä–∞';
      } else if (diffInDays < 7) {
        return `${diffInDays} –¥–Ω. —Ç–æ–º—É`;
      } else if (diffInDays < 30) {
        const weeks = Math.floor(diffInDays / 7);
        return `${weeks} —Ç–∏–∂. —Ç–æ–º—É`;
      } else {
        return date.toLocaleDateString('uk-UA', {
          day: 'numeric',
          month: 'short'
        });
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏:', error);
      return dateString;
    }
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–ª–∞–≤—ñ—à
   */
  handleKeyDown(event) {
    // ESC –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—ñ–≤
    if (event.key === 'Escape') {
      this.closeModal('event-modal');
      this.closeModal('image-modal');
    }
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ —Ä–æ–∑–º—ñ—Ä—É –≤—ñ–∫–Ω–∞
   */
  handleResize() {
    if (window.mapInstance && this.currentSection === 'map') {
      setTimeout(() => {
        window.mapInstance.invalidateSize();
      }, 100);
    }
  }

  /**
   * –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
   */
  showError(message) {
    console.error(message);
    alert('‚ùå ' + message);
  }

  /**
   * –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
   */
  showSuccess(message) {
    console.log(message);
    alert('‚úÖ ' + message);
  }

  /**
   * –ï–∫—Ä–∞–Ω—É–≤–∞–Ω–Ω—è HTML
   */
  escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }

  /**
   * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
   */
  getStatistics() {
    const now = new Date();
    const pastEvents = this.events.filter(event => new Date(event.date) < now);
    const futureEvents = this.events.filter(event => new Date(event.date) >= now);

    return {
      total: this.events.length,
      past: pastEvents.length,
      future: futureEvents.length,
      withPhotos: this.events.filter(event => event.photos && event.photos.length > 0).length
    };
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –¥–æ—Å—Ç—É–ø—É –∑ HTML
function showSection(section) {
  if (window.app) {
    window.app.showSection(section);
  }
}

function clearForm() {
  if (window.app) {
    window.app.clearForm();
  }
}

function exportAllEvents() {
  if (window.adminManager && window.adminManager.exportData) {
    window.adminManager.exportData();
  } else {
    alert('–§—É–Ω–∫—Ü—ñ—è –µ–∫—Å–ø–æ—Ä—Ç—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
  }
}

function showUpcomingEvents() {
  if (window.app) {
    window.app.showSection('future');
  }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
document.addEventListener('DOMContentLoaded', () => {
  window.app = new TaizeCommunityApp();
});

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —è–∫ –º–æ–¥—É–ª—å
if (typeof module !== 'undefined' && module.exports) {
  module.exports = TaizeCommunityApp;
}